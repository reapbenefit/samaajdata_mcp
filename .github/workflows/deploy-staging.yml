name: Deploy to Staging

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: Preview

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Add EC2 to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to staging
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            
            # Navigate to staging directory
            cd rb_mcp_staging
            
            # Pull latest code
            git pull origin main

            # Activate virtualenv
            source venv/bin/activate
            
            # Create .env file with environment variables
            cat > .env << 'ENVEOF'
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          ENV=${{ secrets.ENV }}
          S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
          S3_FOLDER_NAME=${{ secrets.S3_FOLDER_NAME }}
          AWS_CLOUDFRONT_DISTRIBUTION_URL=${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_URL }}
          ENVEOF
            
            # Update requirements
            pip install -r requirements.txt
            
            # Stop existing server if running (ignore errors)
            pkill -f "python server.py --port 7000" || true
            
            # Wait a moment for process to stop
            sleep 2
            
            # Start server in background
            nohup python server.py --port 7000 > staging.log 2>&1 &
            
            # Verify server started
            sleep 5
            if pgrep -f "python server.py --port 7000" > /dev/null; then
              echo "Staging server started successfully"
            else
              echo "Failed to start staging server"
              exit 1
            fi
          EOF

      - name: Verify deployment
        run: |
          echo "Deployment to staging completed successfully"
